# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: bioat_pytest

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9", "3.10" ]
        poetry-version: [ "1.0", "1.1.15" ]
        os: [ ubuntu-18.04, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v4
        # see details (matrix, python-version, python-version-file, etc.)
        # https://github.com/actions/setup-python
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
#      - name: Setup a local virtual environment (if no poetry.toml file)
#        run: |
#          poetry config virtualenvs.create true --local
#          poetry config virtualenvs.in-project true --local
#      - uses: actions/cache@v3
#        name: Define a cache for the virtual environment based on the dependencies lock file
#        with:
#          path: ./.venv
#          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install the project dependencies
        run: poetry install
      - name: Run the automated tests (for example)
        run: poetry run pytest -v
